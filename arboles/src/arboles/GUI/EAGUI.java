package arboles.GUI;

import arboles.ArbolExpArit;
import java.awt.Image;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Equipo 5
 */
public final class EAGUI extends javax.swing.JFrame {

   /**
    * El árbol con el que se trabaja
    */
    ArbolExpArit arbol;
    /**
    * Método constructor
    */
    public EAGUI() {
        arbol = null;
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        expresionTextField = new javax.swing.JTextField();
        solveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Árbol de Expansión Aritmética");
        setResizable(false);

        addButton.setText("Ingresar Expresión");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        showButton.setText("Mostrar árbol");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        backButton.setText("Menú Anterior");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        expresionTextField.setToolTipText("");
        expresionTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expresionTextFieldKeyPressed(evt);
            }
        });

        solveButton.setText("Resolver");
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(solveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(expresionTextField))
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(expresionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addGap(40, 40, 40)
                .addComponent(showButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solveButton)
                .addGap(85, 85, 85)
                .addComponent(backButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        leer();
    }//GEN-LAST:event_addButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        if (arbol == null)
            JOptionPane.showMessageDialog(this, "No hay elementos para mostrar", "Mensaje", JOptionPane.WARNING_MESSAGE);
        else if(arbol.root == null)
            JOptionPane.showMessageDialog(this, "Error. Revise su expresión", "Mensaje", JOptionPane.WARNING_MESSAGE);
        else {
            TreeImageString t = new TreeImageString(arbol);
            Image i = t.generarImagenArbol();
            ImageIcon icon = new ImageIcon(i);
            icon.setImage(icon.getImage().getScaledInstance(490, 350, Image.SCALE_DEFAULT));
            t.mostrarImagen();
        }
    }//GEN-LAST:event_showButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void expresionTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expresionTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            leer();
        }
    }//GEN-LAST:event_expresionTextFieldKeyPressed

    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed
        if (arbol == null)
            JOptionPane.showMessageDialog(this, "No hay elementos para mostrar", "Mensaje", JOptionPane.WARNING_MESSAGE);
        else if(arbol.root == null)
            JOptionPane.showMessageDialog(this, "Error. Revise su expresión", "Mensaje", JOptionPane.WARNING_MESSAGE);
        else
            JOptionPane.showMessageDialog(this, arbol.postOrden(), "Resolución", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_solveButtonActionPerformed

    private void leer() {
        String o = expresionTextField.getText();
        arbol = new ArbolExpArit(o);
        if (arbol.root == null) {
            JOptionPane.showMessageDialog(this, "Error. Revise su expresión", "Mensaje", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "El valor se ha insertado con éxito", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
        expresionTextField.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    public javax.swing.JButton backButton;
    private javax.swing.JTextField expresionTextField;
    private javax.swing.JButton showButton;
    private javax.swing.JButton solveButton;
    // End of variables declaration//GEN-END:variables
}
